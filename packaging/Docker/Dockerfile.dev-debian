FROM debian:11

ARG CIM_VERSION=CGMES_2.4.15_16FEB2016
ARG LIBCIMPP_VERSION=2.2.0
ARG VILLAS_VERSION=5606793aaee2d1eeb663180d3e52718fa8bd5931

ARG CMAKE_OPTS
ARG MAKE_OPTS=-j4

LABEL \
	org.opencontainers.image.title="DPsim" \
	org.opencontainers.image.licenses="MPL 2.0" \
	org.opencontainers.image.url="http://dpsim.fein-aachen.org/" \
	org.opencontainers.image.source="https://github.com/sogno-platform/dpsim"

RUN set -eux; \
	apt-get update; \
	apt-get install -y --no-install-recommends \
		gcc g++ clang \
		git \
		make cmake pkg-config \
		python3-pip \
		wget \
		doxygen graphviz \
		gdb \
		python3-dev \
		libeigen3-dev \
		libxml2-dev \
		libgraphviz-dev \
		libgsl-dev \
		libspdlog-dev \
		pybind11-dev \
		libfmt-dev \
		libssl-dev \
		uuid-dev \
		libcurl4-gnutls-dev \
		libjansson-dev \
		libwebsockets-dev \
		libmosquitto-dev \
		libconfig-dev \
		libnl-3-dev \
		protobuf-dev \
		libprotobuf-c-dev; \
	apt-get clean; \
	rm -rf /var/lib/apt/lists/*

# Build & Install sundials
RUN cd /tmp && \
	git clone --branch v3.2.1 --recurse-submodules --depth 1 https://github.com/LLNL/sundials.git && \
	mkdir -p sundials/build && cd sundials/build && \
	cmake ${CMAKE_OPTS} .. \
		-DCMAKE_BUILD_TYPE=Release && \
	make ${MAKE_OPTS} install && \
	rm -rf /tmp/sundials

## Install libiec61850 from source
RUN cd /tmp && \
	wget https://libiec61850.com/wp-content/uploads/2019/03/libiec61850-1.3.3.tar.gz && \
	tar -zxvf libiec61850-1.3.3.tar.gz && rm libiec61850-1.3.3.tar.gz && \
	cd libiec61850-1.3.3 && \
	mkdir build && cd build && \
	cmake ${CMAKE_OPTS} .. \
		-DBUILD_SHARED_LIBS=ON && \
	make ${MAKE_OPTS} install && \
	rm -rf /tmp/libiec61850-1.3.3

## Python dependencies
COPY requirements.txt .
RUN pip3 install --no-cache-dir --upgrade wheel build setuptools packaging && \
	pip3 install --no-cache-dir -r requirements.txt && \
	pip3 cache purge

## Install libcimpp from prebuilt Debian packages
RUN set -eux; \
	case "${CIM_VERSION}" in \
		CGMES_2.4.15_16FEB2016|CGMES_2.4.15_27JAN2020|CGMES_2.4.13_18DEC2013) \
			libcimpp_pkg="libcimpp_${CIM_VERSION}-${LIBCIMPP_VERSION}-Linux.deb" ;; \
		*) \
			echo "Unsupported CIM_VERSION '${CIM_VERSION}' for prebuilt libcimpp package" >&2; \
			exit 1 ;; \
	esac; \
	libcimpp_url="https://github.com/sogno-platform/libcimpp/releases/download/release%2Fv${LIBCIMPP_VERSION}/${libcimpp_pkg}"; \
	wget -qO /tmp/libcimpp.deb "${libcimpp_url}"; \
	apt-get update; \
	apt-get install -y --no-install-recommends /tmp/libcimpp.deb; \
	rm -f /tmp/libcimpp.deb; \
	ldconfig; \
	apt-get clean; \
	rm -rf /var/lib/apt/lists/*

## Install VILLASnode from source
RUN cd /tmp && \
	git clone --recurse-submodules https://github.com/VILLASframework/node.git villas-node && \
	mkdir -p villas-node/build && cd villas-node/build && \
	git checkout ${VILLAS_VERSION} && \
	cmake ${CMAKE_OPTS} .. \
		-DCMAKE_INSTALL_LIBDIR=/usr/local/lib \
		-DDOWNLOAD_GO=OFF && \
	make ${MAKE_OPTS} install && \
	rm -rf /tmp/villas-node

# Remove this part in the future and use dedicated Jupyter Dockerfile
# Activate Jupyter extensions
RUN set -eux; \
	apt-get update; \
	apt-get install -y --no-install-recommends npm; \
	rm -rf /var/lib/apt/lists/*

RUN pip3 install --no-cache-dir \
	jupyter \
	jupyterlab \
	jupyter_contrib_nbextensions \
	nbconvert \
	nbformat && \
	pip3 cache purge

RUN set -eux; \
	apt-get purge -y npm && \
	apt-get autoremove -y && \
	apt-get clean && \
	rm -rf /var/lib/apt/lists/*

EXPOSE 8888
